<html>
<h1>Dashboard</h1>
<%- include ('./partials/messages') %>
    <p> Welcome, Thanks for Login, now you can upload your talent</p>
    <p class="test1" style="display:none">holy shit</p>
    <button id="subscription" type="submit">Subscribed?</button>

    <p class="test"></p>

    <input type="file" name="file" id="file" value="dataFile" required="" accept="image/*">
    <button onclick="uploadFile()">Upload to S3</button><br>
    <hr />
    <div id='loadingmessage' style='display:none'>
        <img src='https://static.impression.co.uk/2014/05/loading1.gif' height=200 />
    </div>
    <hr />
    <a href="/users/logout">Logout</a>

    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.1.24.min.js"></script>
    <script type="text/javascript"
        src="https://sdk.clarifai.com/js/clarifai-latest.js">const Clarifai = require('clarifai');</script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="text/javascript"></script>
    <script>

        $("#subscription").click(function (event) {
            event.preventDefault(); //prevent default action
            $.ajax({
                url: "users/get",
                type: "GET",
            }).done(function (response) {
                $(".test").append(response);
                $(".test1").show();
            });
        });

        async function uploadFile() {
            const app = new Clarifai.App({
                apiKey: 'c93903e8e94c4084865ae2d08dd94690'
            });
            const loading = document.getElementById("loadingmessage");
            loading.style.display = "block";

            var fileChooser = document.getElementById('file').files;
            if (!fileChooser.length) {
                return alert("Please choose a file");
            }

            var promiseFile = getBase64(fileChooser[0]);
            var baseImage = await promiseFile;
            baseImage = baseImage.replace("data:image/jpeg;base64,", "");

            //Create Inputs (clarifai)
            app.inputs.create({
                base64: baseImage
            }).then(
                function () {
                    app.models.predict({ id: 'human-recognition', version: "b208ae9a93d4451991d41fa1d79e1254" }, { base64: baseImage }).then(
                        function (response) {
                            var concepts = response['outputs'][0]['data']['concepts']
                            //console.dir(concepts[0].value.toFixed(20));
                            var score = concepts[0].value.toFixed(20)
                            if (score > 0.5) {
                                alert("Result:" + score);
                                loading.style.display = "none";
                            } else {
                                console.log(response)
                                alert(score);
                                receiptVerify.innerHTML = displayResult + score;
                                loading.style.display = "none";
                            }
                        },
                        function (err) {
                            alert(score);
                            console.dir(err);
                            loading.style.display = "none";
                        }
                    )
                }
            ).catch( function(response){
                alert(response);
            })

            var albumBucketName = "csctask5-1";
            var bucketRegion = "us-east-1";
            console.log(bucketRegion);

            AWS.config.update({
                region: bucketRegion,
                accessKeyId: "ASIAXURB2YHHFBWH7KVN",
                secretAccessKey: "cTC7FBS69TKBGew0YUk0ZfmIQadvhBzRI5Akah9o",
                sessionToken: "FwoGZXIvYXdzEEAaDHskrjLPTZhd9Q+uKyLKAf3YwcEe8/SwjX4YkZXjz834X62FjzwdSWECo7QXeSa+AE1uYyFxWTO4wowaAxmoNHXMoFihzQz7cJIgeiPG+Pk4/4Ebi/Ih7ZTvXFDhk1MXOt8zF/kAi2z+ssYmMe0bfoUh96PsPrzaX+hkmhFghHJVohWf8fK6VCDzadNiaXIR18MeuNzWnxmRB8kt3+Nc6oie3yuFY/wuItQnyujp38UxILwFBQdiDrY/JVyRvBcA/A4MlExc8zqzXYmEXHNLfDfLiCq8JwW0eFEo2MbzgAYyLX9ITD+/yTL/2EpYqh18MdOwcK2yyPdvIFW3/fkh6zzeD2XCrnCgTWZa0TUZTQ=="
            });

            var uploadS3 = new AWS.S3({
                params: { Bucket: albumBucketName }
            });

            var file = fileChooser[0];
            var fileName = file.name;
            if (file) {
                var params2 = { Key: fileName, ContentType: file.type, Body: file };
                uploadS3.upload(params2).on('httpUploadProgress', function (evt) {
                    console.log("Uploaded :: " + parseInt((evt.loaded * 100) / evt.total) + '%');
                }).send(function (err, data) {
                    if (err) {
                        alert("File uploaded Error." + err.message);
                        console.log(err, err.stack);
                    }
                    else
                        alert("File uploaded successfully."); //"https://csctask5-1.s3.amazonaws.com/myAvatar.png;
                });
            }
            return false;
        }

        function getBase64(file, onLoadCallback) {
            return new Promise(function(resolve, reject) {
                var reader = new FileReader();
                reader.onload = function() { resolve(reader.result); };
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }
    </script>

</html>