<html>
<h1>Dashboard</h1>
<a href="/users/logout">Logout</a>
<%- include ('./partials/messages') %>
    <hr />
    <p> Welcome, Thanks for Login, now you can upload your talent</p>
    <button id="resetDb" type="submit">Reset Database</button>
    <p class="test"></p>
    <hr />

    <h1>Upload</h1>
    <input type="file" name="file" id="file" value="dataFile" required="" accept="image/*">
    <button onclick="uploadFile()">Upload to S3</button><br>
    <hr />
    <h1>Loading</h1>
    <div id='loadingmessage' style='display:none'>
        <img src='https://static.impression.co.uk/2014/05/loading1.gif' height=200 />
    </div>
    <hr />
    <h1>Edit Talents</h1>
    <h2>Update Talent</h2>
    <label>ID:</label>
    <input id="updateId" type="text" required />
    <label>Name:</label>
    <input id="updateName" type="text" required />
    <label>Bio:</label>
    <input id="updateBio" type="text" required />
    <button id="update">Update</button>
    <h2>Delete Talent</h2>
    <label>ID:</label>
    <input id="deleteId" type="text" required />
    <button id="delete">Delete</button>
    <hr />
    <h1>Talents Album</h1>
    <div class="album">

    </div>
    <hr />
    <div id="disqus_thread"></div>
    <script>
        /**
         *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT 
         *  THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR 
         *  PLATFORM OR CMS.
         *  
         *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: 
         *  https://disqus.com/admin/universalcode/#configuration-variables
         */

        //var disqus_config = function () {
            // Replace PAGE_URL with your page's canonical URL variable
           // this.page.url = PAGE_URL;
       // };


        (function () {  // REQUIRED CONFIGURATION VARIABLE: EDIT THE SHORTNAME BELOW
            var d = document, s = d.createElement('script');

            // IMPORTANT: Replace EXAMPLE with your forum shortname!
            s.src = 'https://csc-ca2-3.disqus.com/embed.js';

            s.setAttribute('data-timestamp', +new Date());
            (d.head || d.body).appendChild(s);
        })();
    </script>
    <noscript>
        Please enable JavaScript to view the
        <a href="https://disqus.com/?ref_noscript" rel="nofollow">
            comments powered by Disqus.
        </a>
    </noscript>


    <script src="https://sdk.amazonaws.com/js/aws-sdk-2.1.24.min.js"></script>
    <script type="text/javascript"
        src="https://sdk.clarifai.com/js/clarifai-latest.js">const Clarifai = require('clarifai');</script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js" type="text/javascript"></script>
    <script>

        //update
        $('#update').click(function () {
            var id = $('#updateId').val();
            var name = $('#updateName').val();
            var bio = $('#updateBio').val();

            if (id === "" || name === "" || bio === "") {
                alert('Please fill up the field');
                return;
            }

            var updateBody = {
                "name": name,
                "bio": bio,
            }
            updateBody = JSON.stringify(updateBody);

            $.ajax({
                url: `https://prlc23r7bg.execute-api.us-east-1.amazonaws.com/csc-ca2/talents/${id}`,
                type: "PUT",
                data: updateBody,
            }).done(function (response) {
                displayTalents();
                console.log(response);
                if(response.affectedRows !== 0){
                    alert("Affected rows:" + response.affectedRows);
                } else {
                    alert("Affected rows:" + response.affectedRows + "\nNo results found");
                }
            }).fail(function(response){
                console.log(response);
                alert(response);
            })
            .catch(function (err) {
                alert(err.responseJSON.sqlMessage);
                console.log(err);
            });
        });

        //delete
        $('#delete').click(function () {
            var id = $('#deleteId').val();
            console.log(id);
            if (id === "") {
                alert('Please fill up the field');
                return;
            }
            $.ajax({
                url: `https://prlc23r7bg.execute-api.us-east-1.amazonaws.com/csc-ca2/talents/${id}`,
                type: "DELETE",
            }).done(function (response) {
                displayTalents();
                console.log(response);
                if(response.affectedRows !== 0){
                    alert("Affected rows:" + response.affectedRows);
                } else {
                    alert("Affected rows:" + response.affectedRows + "\nNo results found");
                }
            }).fail(function(response){
                console.log(response);
                alert(response.statusText);
            })
            .catch(function (err) {
                alert(err);
                console.log(err);
            });
        });

        //get
        function displayTalents() {
            $.ajax({
                url: "https://prlc23r7bg.execute-api.us-east-1.amazonaws.com/csc-ca2/talents",
                type: "GET",
            }).done(function (response) {
                var array = response;
                $(".album").html("");
                for (i = 0; i < array.length; i++) {
                    $(".album").append(`<h2>${array[i].name}(ID: ${array[i].id}) [Bio:${array[i].bio}]</h2><img height=250 width=250 src="${array[i].imageLongUrl}">`);
                }
                console.log(response);
            });
        }

        //on load to display
        $(window).on('load', function () {
            displayTalents();
        });

        //reset db
        $("#resetDb").click(function (event) {
            $.ajax({
                url: "talents/reset",
                type: "GET",
            }).done(function (response) {
                $('.test').append(response);
                displayTalents();
                console.log(response);
            });
        });

        //upload file and post
        async function uploadFile() {
            //clarifai
            const app = new Clarifai.App({
                apiKey: '-'
            });

            const loading = document.getElementById("loadingmessage");
            loading.style.display = "block";

            //aws
            var albumBucketName = "csctask5-1";
            var bucketRegion = "us-east-1";
            var link = "s3.amazonaws.com";

            //file
            var fileChooser = document.getElementById('file').files;
            if (!fileChooser.length) {
                return alert("Please choose a file");
            }

            var file = fileChooser[0];
            var fileName = file.name;
            var promiseFile = getBase64(fileChooser[0]);
            var baseImage = await promiseFile;
            baseImage = baseImage.replace("data:image/jpeg;base64,", "");
            baseImage = baseImage.replace("data:image/png;base64,", "");

            //aws config update
            AWS.config.update({ //USE MX's token keys
                region: bucketRegion,
                accessKeyId: "-",
                secretAccessKey: "-",
                sessionToken: "-"
            });

            var uploadS3 = new AWS.S3({
                params: { Bucket: albumBucketName }
            });

            //Create Inputs (clarifai)
            app.inputs.create({
                base64: baseImage
            }).then(
                function () {
                    app.models.predict({ id: 'human-recognition', version: "159f84aa23ef474b9fc1cdf8ac6f0f1c" }, { base64: baseImage }).then(
                        function (response) {
                            var concepts = response['outputs'][0]['data']['concepts']
                            var score = concepts[0].value.toFixed(20)
                            if (score > 0.5) {
                                alert("Result:" + score);
                                loading.style.display = "none";
                                //aws bucket
                                if (file) {
                                    var params2 = { Key: fileName, ContentType: file.type, Body: file };
                                    uploadS3.upload(params2).on('httpUploadProgress', function (evt) {
                                        console.log("Uploaded :: " + parseInt((evt.loaded * 100) / evt.total) + '%');
                                    }).send(function (err, data) {
                                        if (err) {
                                            alert("File uploaded Error." + err.message);
                                            console.log(err, err.stack);
                                        }
                                        else {
                                            var amazonLink = `https://${albumBucketName}.${link}/${fileName}`;//https://csctask5-1.s3.amazonaws.com/myAvatar.png;
                                            alert("File uploaded successfully.");
                                            fileName = fileName.replace(".PNG", "");

                                            var abc = {
                                                "name": fileName.replace(".jpg", ""),
                                                "bio": "Talents",
                                                "imageLongUrl": amazonLink
                                            }
                                            abc = JSON.stringify(abc);

                                            //store talents in aws db
                                            $.ajax({
                                                url: "https://prlc23r7bg.execute-api.us-east-1.amazonaws.com/csc-ca2/talents",
                                                type: "POST",
                                                data: abc,
                                            }).done(function (response) {
                                                displayTalents();
                                                console.log(response);
                                                alert(response);
                                            }).fail(function(err){
                                                console.log(response);
                                                alert(response.statusText);
                                            });
                                        }
                                    });
                                }
                            } else {
                                console.log(response)
                                alert(`AI score: ${score}, Not highly a perfect human image`);
                                loading.style.display = "none";
                            }
                        },
                        function (err) {
                            alert(err);
                            console.dir(err);
                            loading.style.display = "none";
                        }
                    )
                }
            ).catch(function (response) {
                alert(response);
            })
        }

        function getBase64(file, onLoadCallback) {
            return new Promise(function (resolve, reject) {
                var reader = new FileReader();
                reader.onload = function () { resolve(reader.result); };
                reader.onerror = reject;
                reader.readAsDataURL(file);
            });
        }
    </script>

</html>
